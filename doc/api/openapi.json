{
	"openapi": "3.0.2",
	"info": {
		"title": "BDO REST API",
		"version": "v1"
	},
	"servers": [
		{
			"url": "https://bdo.hemlo.cc/communityapi/v1"
		},
		{
			"url": "http://localhost:8001/v1"
		}
	],
	"components": {
		"parameters": {
			"region": {
				"name": "region",
				"in": "query",
				"description": "Only Eropean and North American servers are supported. If you omit this parameter, it's assumed that you want to search on the European server.",
				"schema": {
					"type": "string",
					"enum": ["EU", "NA"],
					"example": "EU"
				}
			}
		},
		"responses": {
			"400": {
				"description": "Bad Request: a required parameter is either missing or in a wrong format."
			},
			"404": {
				"description": "Not Found: try requesting something else."
			},
			"503": {
				"description": "Service Unavailable: [https://naeu.playblackdesert.com](naeu.playblackdesert.com) is currently under maintenance and the data requested is not cached."
			}
		}
	},
	"paths": {
		"/adventurer": {
			"get": {
				"summary": "Retrieve player's profile.",
				"description": "Retrieve the full profile of a single player by his or her profileTarget.",
				"operationId": "getAdventurer",
				"parameters": [
					{
						"name": "profileTarget",
						"in": "query",
						"description": "Player's profileTarget. It should be at least 150 characters long. You can get it from the guild members' list or from the search.",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Watch out for the \"privacy\" attribute that is added to the response when the player whose profile is requested turned on at least one of the privacy options BDO website has. It is a single number that you can decode using bitmasks. `0b0001` for private character levels, `0b0010` for private guild, `0b0100` for private contribution points and `0b1000` for private lifeskill levels. If the attribute is equal to `0b1111` then everything is set to private.",
						"content": {
							"application/json": {
								"schema": {
									"title": "Profile",
									"type": "object",
									"properties": {
										"familyName": {
											"type": "string",
											"example": "Apple"
										},
										"profileTarget": {
											"type": "string",
											"example": "XXX"
										},
										"region": {
											"type": "string",
											"enum": ["EU", "NA"]
										},
										"guild": {
											"properties": {
												"name": {
													"type": "string",
													"example": "TumblrGirls"
												}
											}
										},
										"contributionPoints": {
											"type": "number",
											"example": 100
										},
										"createdOn": {
											"type": "string",
											"example": "2020-02-23T00:00:00Z"
										},
										"characters": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"name": {
														"type": "string",
														"example": "Blue"
													},
													"class": {
														"type": "string",
														"example": "Ninja"
													},
													"main": {
														"type": "boolean",
														"example": true
													},
													"level": {
														"type": "number",
														"example": 56
													},
													"specLevels": {
														"properties": {
															"gathering": {
																"type": "string",
																"example": "Beginner 6"
															},
															"fishing": {
																"type": "string",
																"example": "Master 18"
															},
															"hunting": {
																"type": "string",
																"example": "Beginner 1"
															},
															"cooking": {
																"type": "string",
																"example": "Beginner 4"
															},
															"alchemy": {
																"type": "string",
																"example": "Beginner 1"
															},
															"processing": {
																"type": "string",
																"example": "Beginner 9"
															},
															"training": {
																"type": "string",
																"example": "Apprentice 1"
															},
															"trading": {
																"type": "string",
																"example": "Apprentice 3"
															},
															"farming": {
																"type": "string",
																"example": "Beginner 1"
															},
															"sailing": {
																"type": "string",
																"example": "Beginner 1"
															},
															"barter": {
																"type": "string",
																"example": "Beginner 1"
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/400"
					},
					"404": {
						"$ref": "#/components/responses/404"
					},
					"503": {
						"$ref": "#/components/responses/503"
					}
				}
			}
		},
		"/adventurer/search": {
			"get": {
				"summary": "Search for a player.",
				"description": "Search for a player by a combination of his or her region and family/character name.",
				"operationId": "getAdventurerSearch",
				"parameters": [
					{
						"name": "query",
						"in": "query",
						"description": "Only exact matches work for this search. The length of this parameter should be between 3 and 16 characters, and you can only use symbols A-Z, a-z, 0-9, _.",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/region"
					},
					{
						"name": "searchType",
						"in": "query",
						"description": "Switch between filtering by family name and character name. If you omit this parameter, it's assumed that you want to filter by family name.",
						"schema": {
							"type": "string",
							"enum": ["familyName", "characterName"],
							"example": "familyName"
						}
					},
					{
						"name": "page",
						"in": "query",
						"description": "This parameter is understood by the API, but you should either omit it or set to 1. Because of how player search works, there is never more than one page.",
						"schema": {
							"type": "number",
							"default": 1
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK.",
						"content": {
							"application/json": {
								"schema": {
									"title": "Profile",
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"familyName": {
												"type": "string",
												"example": "Apple"
											},
											"profileTarget": {
												"type": "string",
												"example": "XXX"
											},
											"region": {
												"type": "string",
												"enum": ["EU", "NA"]
											},
											"guild": {
												"properties": {
													"name": {
														"type": "string",
														"example": "TumblrGirls"
													}
												}
											},
											"characters": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"name": {
															"type": "string",
															"example": "Blue"
														},
														"class": {
															"type": "string",
															"example": "Ninja"
														},
														"level": {
															"type": "number",
															"example": 56
														}
													}
												}
											}
										}
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/400"
					},
					"404": {
						"$ref": "#/components/responses/404"
					},
					"503": {
						"$ref": "#/components/responses/503"
					}
				}
			}
		},
		"/guild": {
			"get": {
				"summary": "Retrieve guild profile.",
				"description": "Retrieve the profile of a guild by its name.",
				"operationId": "getGuild",
				"parameters": [
					{
						"name": "guildName",
						"in": "query",
						"description": "Guild's name. It should be at least 2 characters long and can only contain A-Z, a-z, 0-9, _ characters.",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/region"
					}
				],
				"responses": {
					"200": {
						"description": "OK.",
						"content": {
							"application/json": {
								"schema": {
									"title": "Guild",
									"type": "object",
									"properties": {
										"name": {
											"type": "string",
											"example": "TumblrGirls"
										},
										"region": {
											"type": "string",
											"enum": ["EU", "NA"]
										},
										"createdOn": {
											"type": "string",
											"example": "2020-02-23T00:00:00Z"
										},
										"master": {
											"type": "object",
											"properties": {
												"familyName": {
													"type": "string",
													"example": "Apple"
												},
												"profileTarget": {
													"type": "string",
													"example": "XXX"
												}
											}
										},
										"members": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"familyName": {
														"type": "string",
														"example": "Apple"
													},
													"profileTarget": {
														"type": "string",
														"example": "XXX"
													}
												}
											}
										},
										"population": {
											"type": "number",
											"example": 1
										},
										"occupying": {
											"type": "string",
											"example": "Mediah Territory"
										}
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/400"
					},
					"404": {
						"$ref": "#/components/responses/404"
					},
					"503": {
						"$ref": "#/components/responses/503"
					}
				}
			}
		},
		"/guild/search": {
			"get": {
				"summary": "Search for a guild.",
				"description": "Search for a guild by combination of its region and name.",
				"operationId": "getGuildSearch",
				"parameters": [
					{
						"name": "query",
						"in": "query",
						"description": "The query string should be at least 2 characters long and can only contain A-Z, a-z, 0-9, _ characters.",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/region"
					},
					{
						"name": "page",
						"in": "query",
						"description": "If the results have more than one page, you can navigate through those pages using this parameter. The indexing starts with 1.",
						"schema": {
							"type": "number",
							"default": 1
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK.",
						"content": {
							"application/json": {
								"schema": {
									"title": "GuildSearchResult",
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"name": {
												"type": "string",
												"example": "TumblrGirls"
											},
											"region": {
												"type": "string",
												"enum": ["EU", "NA"]
											},
											"createdOn": {
												"type": "string",
												"example": "2020-02-23T00:00:00Z"
											},
											"master": {
												"type": "object",
												"properties": {
													"familyName": {
														"type": "string",
														"example": "Apple"
													},
													"profileTarget": {
														"type": "string",
														"example": "XXX"
													}
												}
											},
											"kind": {
												"type": "string",
												"enum": ["Guild", "Clan"]
											},
											"population": {
												"type": "number",
												"example": 1
											}
										}
									}
								}
							}
						}
					},
					"400": {
						"$ref": "#/components/responses/400"
					},
					"404": {
						"$ref": "#/components/responses/404"
					},
					"503": {
						"$ref": "#/components/responses/503"
					}
				}
			}
		}
	}
}
