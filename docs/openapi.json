{
	"openapi": "3.0.2",
	"info": {
		"title": "BDO REST API",
		"version": "v1"
	},
	"servers": [
		{
			"url": "https://bdo.hemlo.cc/communityapi"
		},
		{
			"url": "http://localhost:8001"
		}
	],
	"components": {
		"parameters": {
			"region": {
				"name": "region",
				"in": "query",
				"description": "Only Eropean, North American and South American servers are supported. If you omit this parameter, it's assumed that you want to search on the European server.",
				"schema": {
					"type": "string",
					"enum": [
						"EU",
						"NA",
						"SA"
					],
					"default": "EU"
				}
			}
		},
		"responses": {
			"202": {
				"description": "Data is being fetched. Please try again later."
			},
			"400": {
				"description": "Bad Request. A required query parameter is either missing or in a wrong format."
			},
			"404": {
				"description": "Not Found. Request something else, or contact instance owner if you're sure that it's a mistake."
			},
			"429": {
				"description": "Too Many Requests. Try doing the same request after waiting some time."
			},
			"500": {
				"description": "Internal Server Error. Try doing the same request after waiting some time, contact instance owner if the problem persists."
			},
			"503": {
				"description": "Service Unavailable. BDO website is currently under maintenance and requested data is temporarily not available."
			}
		}
	},
	"paths": {
		"/v1": {
			"get": {
				"summary": "Retrieve instance's status",
				"operationId": "getMeta",
				"responses": {
					"200": {
						"description": "OK.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"cache": {
											"type": "object",
											"properties": {
												"lastDetectedMaintenance": {
													"type": "object",
													"example": {
														"EUNA": "0001-01-01T00:00:00Z",
														"SA": "0001-01-01T00:00:00Z"
													}
												},
												"responses": {
													"type": "object",
													"properties": {
														"/adventurer": {
															"type": "number"
														},
														"/adventurer/search": {
															"type": "number"
														},
														"/guild": {
															"type": "number"
														},
														"/guild/search": {
															"type": "number"
														}
													}
												},
												"ttl": {
													"type": "object",
													"properties": {
														"general": {
															"type": "string",
															"default": "3h0m0s"
														},
														"maintenanceStatus": {
															"type": "string",
															"default": "5m0s"
														}
													}
												}
											}
										},
										"docs": {
											"type": "string",
											"default": "https://man90es.github.io/BDO-REST-API"
										},
										"proxies": {
											"type": "number"
										},
										"rateLimit": {
											"type": "number",
											"default": 512
										},
										"taskQueue": {
											"type": "object",
											"properties": {
												"maxTasksPerClient": {
													"type": "number",
													"default": 5
												},
												"taskRetries": {
													"type": "number",
													"default": 3
												}
											}
										},
										"uptime": {
											"type": "string",
											"example": "2m49s"
										},
										"version": {
											"type": "string",
											"example": "1.5.1"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/v1/adventurer": {
			"get": {
				"summary": "Retrieve player's profile.",
				"description": "Retrieve the full profile of a single player by his or her profileTarget.",
				"operationId": "getAdventurer",
				"parameters": [
					{
						"name": "profileTarget",
						"in": "query",
						"description": "Player's profileTarget. It should be at least 150 characters long. You can get it from the guild members' list or from the search.",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "region",
						"in": "query",
						"description": "Player's region. Can be omitted for EU or NA.",
						"schema": {
							"type": "string",
							"enum": [
								"EU",
								"NA",
								"SA"
							],
							"default": "EU"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK.",
						"content": {
							"application/json": {
								"schema": {
									"title": "Profile",
									"type": "object",
									"properties": {
										"familyName": {
											"nullable": false,
											"type": "string",
											"example": "Apple"
										},
										"profileTarget": {
											"nullable": false,
											"type": "string",
											"example": "XXX"
										},
										"region": {
											"nullable": false,
											"type": "string",
											"enum": [
												"EU",
												"NA",
												"SA"
											]
										},
										"guild": {
											"nullable": true,
											"properties": {
												"name": {
													"nullable": false,
													"type": "string",
													"example": "TumblrGirls"
												}
											}
										},
										"contributionPoints": {
											"description": "Contribution points",
											"nullable": true,
											"type": "integer",
											"example": 100,
											"minimum": 0
										},
										"createdOn": {
											"description": "Account creation date",
											"nullable": false,
											"type": "string",
											"example": "2020-02-23T00:00:00Z"
										},
										"characters": {
											"description": "Player's characters",
											"type": "array",
											"nullable": false,
											"items": {
												"type": "object",
												"properties": {
													"name": {
														"nullable": false,
														"type": "string",
														"example": "Blue"
													},
													"class": {
														"nullable": false,
														"type": "string",
														"example": "Ninja"
													},
													"main": {
														"nullable": true,
														"type": "boolean",
														"example": true
													},
													"level": {
														"nullable": true,
														"type": "integer",
														"example": 56,
														"minimum": 0
													}
												}
											}
										},
										"specLevels": {
											"description": "Levels of different life skills",
											"nullable": true,
											"properties": {
												"gathering": {
													"nullable": false,
													"type": "string",
													"example": "Beginner 6"
												},
												"fishing": {
													"nullable": false,
													"type": "string",
													"example": "Master 18"
												},
												"hunting": {
													"nullable": false,
													"type": "string",
													"example": "Beginner 1"
												},
												"cooking": {
													"nullable": false,
													"type": "string",
													"example": "Beginner 4"
												},
												"alchemy": {
													"nullable": false,
													"type": "string",
													"example": "Beginner 1"
												},
												"processing": {
													"nullable": false,
													"type": "string",
													"example": "Beginner 9"
												},
												"training": {
													"nullable": false,
													"type": "string",
													"example": "Apprentice 1"
												},
												"trading": {
													"nullable": false,
													"type": "string",
													"example": "Apprentice 3"
												},
												"farming": {
													"nullable": false,
													"type": "string",
													"example": "Beginner 1"
												},
												"sailing": {
													"nullable": false,
													"type": "string",
													"example": "Beginner 1"
												},
												"barter": {
													"nullable": false,
													"type": "string",
													"example": "Beginner 1"
												}
											}
										},
										"lifeFame": {
											"description": "Life fame",
											"example": 907,
											"nullable": true,
											"type": "integer",
											"minimum": 0
										},
										"combatFame": {
											"description": "Combat fame",
											"example": 1136,
											"nullable": true,
											"type": "integer",
											"minimum": 0
										},
										"energy": {
											"description": "Energy",
											"example": 400,
											"nullable": true,
											"type": "integer",
											"minimum": 0
										},
										"gs": {
											"description": "The higher value between AP+DP or AAP+DP.",
											"example": 600,
											"nullable": true,
											"type": "integer",
											"minimum": 0
										},
										"history": {
											"description": "30-day history of the adventurer's activity",
											"nullable": true,
											"type": "object",
											"properties": {
												"fish": {
													"description": "Fished items",
													"nullable": false,
													"type": "integer",
													"example": 100,
													"minimum": 0
												},
												"loot": {
													"description": "Obtained loot",
													"nullable": false,
													"type": "integer",
													"example": 200,
													"minimum": 0
												},
												"lootWeight": {
													"description": "Obtained loot weight",
													"nullable": false,
													"type": "integer",
													"example": 300,
													"minimum": 0
												},
												"mobs": {
													"description": "Monsters defeated",
													"nullable": false,
													"type": "number",
													"example": 400,
													"minimum": 0
												}
											}
										},
										"mastery": {
											"description": "Mastery of different life skills",
											"nullable": true,
											"properties": {
												"gathering": {
													"nullable": false,
													"type": "integer",
													"example": 1000,
													"minimum": 0
												},
												"fishing": {
													"nullable": false,
													"type": "integer",
													"example": 1000,
													"minimum": 0
												},
												"hunting": {
													"nullable": false,
													"type": "integer",
													"example": 1000,
													"minimum": 0
												},
												"cooking": {
													"nullable": false,
													"type": "integer",
													"example": 1000,
													"minimum": 0
												},
												"alchemy": {
													"nullable": false,
													"type": "integer",
													"example": 1000,
													"minimum": 0
												},
												"processing": {
													"nullable": false,
													"type": "integer",
													"example": 1000,
													"minimum": 0
												},
												"training": {
													"nullable": false,
													"type": "integer",
													"example": 1000,
													"minimum": 0
												},
												"trading": {
													"nullable": false,
													"type": "integer",
													"example": 1000,
													"minimum": 0
												},
												"farming": {
													"nullable": false,
													"type": "integer",
													"example": 1000,
													"minimum": 0
												},
												"sailing": {
													"nullable": false,
													"type": "integer",
													"example": 1000,
													"minimum": 0
												},
												"barter": {
													"nullable": false,
													"type": "integer",
													"example": 1000,
													"minimum": 0
												}
											}
										},
										"privacy": {
											"description": "Player's privacy level. Can be either 0 for public or 15 for private.",
											"nullable": true,
											"type": "integer"
										}
									}
								}
							}
						}
					},
					"202": {
						"$ref": "#/components/responses/202"
					},
					"400": {
						"$ref": "#/components/responses/400"
					},
					"404": {
						"$ref": "#/components/responses/404"
					},
					"429": {
						"$ref": "#/components/responses/429"
					},
					"500": {
						"$ref": "#/components/responses/500"
					},
					"503": {
						"$ref": "#/components/responses/503"
					}
				}
			}
		},
		"/v1/adventurer/search": {
			"get": {
				"summary": "Search for a player.",
				"description": "Search for a player by a combination of his or her region and family/character name.",
				"operationId": "getAdventurerSearch",
				"parameters": [
					{
						"name": "query",
						"in": "query",
						"description": "Only exact matches work for this search. The length of this parameter should be between 3 and 16 characters, and you can only use symbols A-Z, a-z, 0-9, _.",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/region"
					},
					{
						"name": "searchType",
						"in": "query",
						"description": "Switch between filtering by family name and character name. If you omit this parameter, it's assumed that you want to filter by family name.",
						"schema": {
							"type": "string",
							"enum": [
								"familyName",
								"characterName"
							],
							"example": "familyName"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK.",
						"content": {
							"application/json": {
								"schema": {
									"title": "Profile",
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"familyName": {
												"nullable": false,
												"type": "string",
												"example": "Apple"
											},
											"profileTarget": {
												"nullable": false,
												"type": "string",
												"example": "XXX"
											},
											"region": {
												"nullable": false,
												"type": "string",
												"enum": [
													"EU",
													"NA",
													"SA"
												]
											},
											"guild": {
												"nullable": true,
												"properties": {
													"name": {
														"nullable": false,
														"type": "string",
														"example": "TumblrGirls"
													}
												}
											},
											"characters": {
												"nullable": true,
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"name": {
															"nullable": false,
															"type": "string",
															"example": "Blue"
														},
														"class": {
															"nullable": false,
															"type": "string",
															"example": "Ninja"
														},
														"main": {
															"nullable": true,
															"type": "boolean",
															"example": true
														},
														"level": {
															"nullable": false,
															"type": "number",
															"example": 56
														}
													}
												}
											}
										}
									}
								}
							}
						}
					},
					"202": {
						"$ref": "#/components/responses/202"
					},
					"400": {
						"$ref": "#/components/responses/400"
					},
					"404": {
						"$ref": "#/components/responses/404"
					},
					"429": {
						"$ref": "#/components/responses/429"
					},
					"500": {
						"$ref": "#/components/responses/500"
					},
					"503": {
						"$ref": "#/components/responses/503"
					}
				}
			}
		},
		"/v1/guild": {
			"get": {
				"summary": "Retrieve guild profile.",
				"description": "Retrieve the profile of a guild by its name.",
				"operationId": "getGuild",
				"parameters": [
					{
						"name": "guildName",
						"in": "query",
						"description": "Guild's name. It should be at least 2 characters long and can only contain A-Z, a-z, 0-9, _ characters.",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/region"
					}
				],
				"responses": {
					"200": {
						"description": "OK.",
						"content": {
							"application/json": {
								"schema": {
									"title": "Guild",
									"type": "object",
									"properties": {
										"name": {
											"type": "string",
											"example": "TumblrGirls"
										},
										"region": {
											"type": "string",
											"enum": [
												"EU",
												"NA",
												"SA"
											]
										},
										"createdOn": {
											"type": "string",
											"example": "2020-02-23T00:00:00Z"
										},
										"master": {
											"type": "object",
											"properties": {
												"familyName": {
													"type": "string",
													"example": "Apple"
												},
												"profileTarget": {
													"type": "string",
													"example": "XXX"
												}
											}
										},
										"members": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"familyName": {
														"type": "string",
														"example": "Apple"
													},
													"profileTarget": {
														"type": "string",
														"example": "XXX"
													}
												}
											}
										},
										"population": {
											"type": "number",
											"example": 1
										},
										"occupying": {
											"type": "string",
											"example": "Mediah Territory"
										}
									}
								}
							}
						}
					},
					"202": {
						"$ref": "#/components/responses/202"
					},
					"400": {
						"$ref": "#/components/responses/400"
					},
					"404": {
						"$ref": "#/components/responses/404"
					},
					"429": {
						"$ref": "#/components/responses/429"
					},
					"500": {
						"$ref": "#/components/responses/500"
					},
					"503": {
						"$ref": "#/components/responses/503"
					}
				}
			}
		},
		"/v1/guild/search": {
			"get": {
				"summary": "Search for a guild.",
				"description": "Search for a guild by combination of its region and name.",
				"operationId": "getGuildSearch",
				"parameters": [
					{
						"name": "query",
						"in": "query",
						"description": "The query string should be at least 2 characters long and can only contain A-Z, a-z, 0-9, _ characters.",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/region"
					}
				],
				"responses": {
					"200": {
						"description": "OK.",
						"content": {
							"application/json": {
								"schema": {
									"title": "GuildSearchResult",
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"name": {
												"type": "string",
												"example": "TumblrGirls"
											},
											"region": {
												"type": "string",
												"enum": [
													"EU",
													"NA",
													"SA"
												]
											},
											"createdOn": {
												"type": "string",
												"example": "2020-02-23T00:00:00Z"
											},
											"master": {
												"type": "object",
												"properties": {
													"familyName": {
														"type": "string",
														"example": "Apple"
													},
													"profileTarget": {
														"type": "string",
														"example": "XXX"
													}
												}
											},
											"population": {
												"type": "number",
												"example": 1
											}
										}
									}
								}
							}
						}
					},
					"202": {
						"$ref": "#/components/responses/202"
					},
					"400": {
						"$ref": "#/components/responses/400"
					},
					"404": {
						"$ref": "#/components/responses/404"
					},
					"429": {
						"$ref": "#/components/responses/429"
					},
					"500": {
						"$ref": "#/components/responses/500"
					},
					"503": {
						"$ref": "#/components/responses/503"
					}
				}
			}
		},
		"/v1/cache": {
			"get": {
				"summary": "Retrieve cached routes",
				"operationId": "getCache",
				"responses": {
					"200": {
						"description": "OK.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"/adventurer": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"profileTarget": {
														"nullable": false,
														"type": "string",
														"example": "XXX"
													},
													"region": {
														"nullable": false,
														"type": "string",
														"enum": [
															"EU",
															"NA",
															"SA"
														]
													}
												}
											}
										},
										"/adventurer/search": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"query": {
														"nullable": false,
														"type": "string",
														"example": "Apple"
													},
													"region": {
														"nullable": false,
														"type": "string",
														"enum": [
															"EU",
															"NA",
															"SA"
														]
													},
													"searchType": {
														"nullable": false,
														"type": "string",
														"enum": [
															"familyName",
															"characterName"
														]
													}
												}
											}
										},
										"/guild": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"guildName": {
														"nullable": false,
														"type": "string",
														"example": "TumblrGirls"
													},
													"region": {
														"nullable": false,
														"type": "string",
														"enum": [
															"EU",
															"NA",
															"SA"
														]
													}
												}
											}
										},
										"/guild/search": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"query": {
														"nullable": false,
														"type": "string",
														"example": "TumblrGirls"
													},
													"region": {
														"nullable": false,
														"type": "string",
														"enum": [
															"EU",
															"NA",
															"SA"
														]
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
